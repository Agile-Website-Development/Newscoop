<?php
require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__) . '/bootstrap.php';

require_once dirname(__FILE__) . '/../classes/DatabaseObject.php';

/**
 * Test class for DatabaseObject.
 * Generated by PHPUnit on 2010-12-16 at 18:03:36.
 */
class DatabaseObjectTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var DatabaseObject
     */
    protected $object;

    /** @var string */
    protected $table = NULL;

    /** @var string */
    protected $key = 'id';

    /** @var array */
    protected $cols = array('id', 'data');

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        global $g_ado_db;

        if ($this->table === NULL) {
            $this->table = 't' . sha1(uniqid());
            $g_ado_db->Execute('CREATE TABLE ' . $this->table . ' (
                id int(10) not null auto_increment,
                data varchar(100) not null,
                primary key (id)
            )');
        }

        $this->object = new TestDatabaseObject($this->table,
            array('id', 'data'), 'id');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        global $g_ado_db;

        $g_ado_db->Execute('DROP TABLE ' . $this->table);
    }

    /**
     * @todo Implement testSameAs().
     */
    public function testSameAs()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     */
    public function testGetKeyColumnNames()
    {
        $this->assertEquals(array($this->key), $this->object->getKeyColumnNames());
    }

    /**
     * @todo Implement testGetColumnNames().
     *
    public function testGetColumnNames()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetColumnNames().
     */
    public function testSetColumnNames()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetData().
     */
    public function testGetData()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     */
    public function testGetDbTableName()
    {
        $this->assertEquals($this->table, $this->object->getDbTableName());
    }

    /**
     * @todo Implement testGetKey().
     */
    public function testGetKey()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetKey().
     */
    public function testSetKey()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testModifyKeyValue().
     */
    public function testModifyKeyValue()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testFetch().
     */
    public function testFetch()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testExists().
     */
    public function testExists()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetKeyWhereClause().
     */
    public function testGetKeyWhereClause()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testKeyValuesExist().
     */
    public function testKeyValuesExist()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     */
    public function testCreate()
    {
        $this->assertTrue($this->object->create(array(
            'data' => sha1(uniqid()),
        )));
    }

    /**
     * @todo Implement testDelete().
     */
    public function testDelete()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetProperty().
     */
    public function testGetProperty()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetProperty().
     */
    public function testSetProperty()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testUpdate().
     */
    public function testUpdate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testCommit().
     */
    public function testCommit()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSearch().
     */
    public function testSearch()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testDumpToHtml().
     */
    public function testDumpToHtml()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testProcessOptions().
     */
    public function testProcessOptions()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testReadFromCache().
     */
    public function testReadFromCache()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testDuplicateObject().
     */
    public function testDuplicateObject()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetUseCache().
     */
    public function testGetUseCache()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetUseCache().
     */
    public function testSetUseCache()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testResetCache().
     */
    public function testResetCache()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testWriteCache().
     */
    public function testWriteCache()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetCacheKey().
     */
    public function testGetCacheKey()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}

class TestDatabaseObject extends DatabaseObject
{
    public function __construct($table, $cols = array(), $key = 'id')
    {
        $this->m_dbTableName = $table;
        $this->m_columnNames = $cols;
        $this->m_keyColumnNames = array($key);
        $this->m_keyIsAutoIncrement = TRUE;

        parent::__construct($this->m_columnNames);
    }
}
